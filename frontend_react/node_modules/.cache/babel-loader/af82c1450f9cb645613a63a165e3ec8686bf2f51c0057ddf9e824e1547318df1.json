{"ast":null,"code":"import { createStore } from \"redux\";\nconst defaultState = {\n  current_user: {\n    'id': 0,\n    'username': 'anon',\n    'first_name': 'Не авторизованный пользователь',\n    'last_name': '',\n    'token': '',\n    'role': '',\n    'authenticated': false\n  },\n  show_auth_modal: false,\n  show_logout_modal: false,\n  show_machine_modal: false,\n  show_search_info: false,\n  auth_info: {\n    show: false,\n    text: ''\n  },\n  show_info: {\n    show: false,\n    text: ''\n  },\n  machine_info: undefined,\n  maintenance_info: undefined,\n  complaints_info: undefined,\n  machine_list_data: undefined,\n  active_page: 'machine',\n  target_machin_num: ''\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SET_MACHINE_LIST_DATA\":\n      return {\n        ...state,\n        machine_list_data: action.payload\n      };\n    case \"SHOW_AUTH_MODAL\":\n      return {\n        ...state,\n        show_auth_modal: !state.show_auth_modal\n      };\n    case \"SHOW_LOGOUT_MODAL\":\n      return {\n        ...state,\n        show_logout_modal: !state.show_logout_modal\n      };\n    case \"SHOW_MACHINE_MODAL\":\n      return {\n        ...state,\n        show_machine_modal: !state.show_machine_modal\n      };\n    case \"SHOW_AUTH_INFO\":\n      return {\n        ...state,\n        auth_info: action.payload\n      };\n    case \"SHOW_INFO\":\n      return {\n        ...state,\n        show_info: action.payload\n      };\n    case \"AUTHORISATION_SUCCESS\":\n      return {\n        ...state,\n        current_user: action.payload\n      };\n    case \"LOGOUT\":\n      state = defaultState;\n      return {\n        ...state\n      };\n    case \"SET_MACHINE_INFO\":\n      return {\n        ...state,\n        machine_info: action.payload\n      };\n    case \"UPDATE_MACHINE_INFO\":\n      let result = state.machine_info;\n      result[action.key] = action.value;\n      return {\n        ...state,\n        machine_info: result\n      };\n    case \"SET_MAINTENANCE_INFO\":\n      return {\n        ...state,\n        maintenance_info: action.payload\n      };\n    case \"SET_COMPLAINS_INFO\":\n      return {\n        ...state,\n        complaints_info: action.payload\n      };\n    case \"SET_TARGET_MACHIN_NUM\":\n      return {\n        ...state,\n        target_machin_num: action.payload\n      };\n    case \"SET_ACTIVE_PAGE\":\n      return {\n        ...state,\n        active_page: action.payload\n      };\n    case \"SHOW_SEARCH_INFO\":\n      return {\n        ...state,\n        show_search_info: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const store = createStore(reducer);","map":{"version":3,"names":["createStore","defaultState","current_user","show_auth_modal","show_logout_modal","show_machine_modal","show_search_info","auth_info","show","text","show_info","machine_info","undefined","maintenance_info","complaints_info","machine_list_data","active_page","target_machin_num","reducer","state","action","type","payload","result","key","value","store"],"sources":["D:/moy_silant-main/frontend_react/src/State/MainState.js"],"sourcesContent":["import {createStore} from \"redux\";\n\nconst defaultState = {\n    current_user: {\n        'id': 0,\n        'username': 'anon',\n        'first_name': 'Не авторизованный пользователь',\n        'last_name': '',\n        'token': '',\n        'role': '',\n        'authenticated': false,\n    },\n    show_auth_modal: false,\n    show_logout_modal: false,\n    show_machine_modal: false,\n\n    show_search_info: false,\n    auth_info: {\n        show: false,\n        text: ''\n    },\n    show_info: {\n        show: false,\n        text: ''\n    },\n\n    machine_info: undefined,\n    maintenance_info: undefined,\n    complaints_info: undefined,\n\n    machine_list_data: undefined,\n\n    active_page: 'machine',\n    target_machin_num: ''\n}\n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case \"SET_MACHINE_LIST_DATA\":\n            return {...state, machine_list_data: action.payload}\n\n        case \"SHOW_AUTH_MODAL\":\n            return {...state, show_auth_modal: !state.show_auth_modal}\n\n        case \"SHOW_LOGOUT_MODAL\":\n            return {...state, show_logout_modal: !state.show_logout_modal}\n\n        case \"SHOW_MACHINE_MODAL\":\n            return {...state, show_machine_modal: !state.show_machine_modal}\n\n        case \"SHOW_AUTH_INFO\":\n            return {...state, auth_info: action.payload}\n\n        case \"SHOW_INFO\":\n            return {...state, show_info: action.payload}\n\n        case \"AUTHORISATION_SUCCESS\":\n            return {...state, current_user: action.payload}\n\n        case \"LOGOUT\":\n            state = defaultState\n            return {...state}\n\n        case \"SET_MACHINE_INFO\":\n            return {...state, machine_info: action.payload}\n\n        case \"UPDATE_MACHINE_INFO\":\n            let result = state.machine_info\n            result[action.key] = action.value\n            return {...state, machine_info: result}\n        case \"SET_MAINTENANCE_INFO\":\n            return {...state, maintenance_info: action.payload}\n        case \"SET_COMPLAINS_INFO\":\n            return {...state, complaints_info: action.payload}\n\n        case \"SET_TARGET_MACHIN_NUM\":\n            return {...state, target_machin_num: action.payload}\n\n        case \"SET_ACTIVE_PAGE\":\n            return {...state, active_page: action.payload}\n\n        case \"SHOW_SEARCH_INFO\":\n            return {...state, show_search_info: action.payload}\n\n        default:\n            return state\n    }\n}\n\nexport const store = createStore(reducer)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}